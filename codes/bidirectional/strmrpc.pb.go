// Code generated by protoc-gen-go. DO NOT EDIT.
// source: strmrpc.proto

package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StreamData struct {
	ID                   int64                `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Values               []string             `protobuf:"bytes,2,rep,name=Values" json:"Values,omitempty"`
	TimeStamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StreamData) Reset()         { *m = StreamData{} }
func (m *StreamData) String() string { return proto.CompactTextString(m) }
func (*StreamData) ProtoMessage()    {}
func (*StreamData) Descriptor() ([]byte, []int) {
	return fileDescriptor_strmrpc_057f2157920d08d5, []int{0}
}
func (m *StreamData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamData.Unmarshal(m, b)
}
func (m *StreamData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamData.Marshal(b, m, deterministic)
}
func (dst *StreamData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamData.Merge(dst, src)
}
func (m *StreamData) XXX_Size() int {
	return xxx_messageInfo_StreamData.Size(m)
}
func (m *StreamData) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamData.DiscardUnknown(m)
}

var xxx_messageInfo_StreamData proto.InternalMessageInfo

func (m *StreamData) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *StreamData) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *StreamData) GetTimeStamp() *timestamp.Timestamp {
	if m != nil {
		return m.TimeStamp
	}
	return nil
}

func init() {
	proto.RegisterType((*StreamData)(nil), "gorpctutor.genfile.StreamData")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Demostream service

type DemostreamClient interface {
	EchangerStream(ctx context.Context, opts ...grpc.CallOption) (Demostream_EchangerStreamClient, error)
}

type demostreamClient struct {
	cc *grpc.ClientConn
}

func NewDemostreamClient(cc *grpc.ClientConn) DemostreamClient {
	return &demostreamClient{cc}
}

func (c *demostreamClient) EchangerStream(ctx context.Context, opts ...grpc.CallOption) (Demostream_EchangerStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Demostream_serviceDesc.Streams[0], c.cc, "/gorpctutor.genfile.demostream/EchangerStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &demostreamEchangerStreamClient{stream}
	return x, nil
}

type Demostream_EchangerStreamClient interface {
	Send(*StreamData) error
	Recv() (*StreamData, error)
	grpc.ClientStream
}

type demostreamEchangerStreamClient struct {
	grpc.ClientStream
}

func (x *demostreamEchangerStreamClient) Send(m *StreamData) error {
	return x.ClientStream.SendMsg(m)
}

func (x *demostreamEchangerStreamClient) Recv() (*StreamData, error) {
	m := new(StreamData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Demostream service

type DemostreamServer interface {
	EchangerStream(Demostream_EchangerStreamServer) error
}

func RegisterDemostreamServer(s *grpc.Server, srv DemostreamServer) {
	s.RegisterService(&_Demostream_serviceDesc, srv)
}

func _Demostream_EchangerStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DemostreamServer).EchangerStream(&demostreamEchangerStreamServer{stream})
}

type Demostream_EchangerStreamServer interface {
	Send(*StreamData) error
	Recv() (*StreamData, error)
	grpc.ServerStream
}

type demostreamEchangerStreamServer struct {
	grpc.ServerStream
}

func (x *demostreamEchangerStreamServer) Send(m *StreamData) error {
	return x.ServerStream.SendMsg(m)
}

func (x *demostreamEchangerStreamServer) Recv() (*StreamData, error) {
	m := new(StreamData)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Demostream_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gorpctutor.genfile.demostream",
	HandlerType: (*DemostreamServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EchangerStream",
			Handler:       _Demostream_EchangerStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "strmrpc.proto",
}

func init() { proto.RegisterFile("strmrpc.proto", fileDescriptor_strmrpc_057f2157920d08d5) }

var fileDescriptor_strmrpc_057f2157920d08d5 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x8f, 0x31, 0x6f, 0x83, 0x40,
	0x0c, 0x85, 0x7b, 0x50, 0x21, 0xc5, 0x55, 0x33, 0xdc, 0x50, 0x21, 0x86, 0x0a, 0x65, 0x42, 0x1d,
	0x8e, 0x2a, 0x5d, 0x3a, 0x57, 0x74, 0xc8, 0x4a, 0xa2, 0x0c, 0xdd, 0x0e, 0xe2, 0x5c, 0x4e, 0xc2,
	0x18, 0x1d, 0xe6, 0xff, 0x57, 0x85, 0x46, 0x19, 0x3a, 0x74, 0xb4, 0xfc, 0xec, 0xef, 0x7b, 0xf0,
	0x38, 0x4a, 0xa0, 0x30, 0xb4, 0x66, 0x08, 0x2c, 0xac, 0xb5, 0xe3, 0x30, 0xb4, 0x32, 0x09, 0x07,
	0xe3, 0xb0, 0x3f, 0xfb, 0x0e, 0xb3, 0x17, 0xe7, 0xe5, 0x32, 0x35, 0xa6, 0x65, 0x2a, 0x1d, 0xb3,
	0xeb, 0xb0, 0x9c, 0xc3, 0xcd, 0x74, 0x2e, 0xc5, 0x13, 0x8e, 0x62, 0x69, 0x58, 0xee, 0x37, 0x3d,
	0xc0, 0x5e, 0x02, 0x5a, 0xaa, 0xac, 0x58, 0xbd, 0x86, 0x68, 0x57, 0xa5, 0x2a, 0x57, 0x45, 0x5c,
	0x47, 0xbb, 0x4a, 0x3f, 0x41, 0x72, 0xb4, 0xdd, 0x84, 0x63, 0x1a, 0xe5, 0x71, 0xb1, 0xaa, 0x7f,
	0x27, 0xfd, 0x0e, 0xab, 0x83, 0x27, 0xdc, 0xff, 0x3c, 0x4a, 0xe3, 0x5c, 0x15, 0x0f, 0xdb, 0xcc,
	0x2c, 0x28, 0x73, 0x45, 0x99, 0xc3, 0x15, 0x55, 0xdf, 0xc2, 0xdb, 0x13, 0xc0, 0x09, 0x89, 0xc7,
	0x99, 0xa9, 0x8f, 0xb0, 0xfe, 0x6c, 0x2f, 0xb6, 0x77, 0x18, 0x16, 0x0b, 0xfd, 0x6c, 0xfe, 0x16,
	0x32, 0x37, 0xc3, 0xec, 0x9f, 0xfd, 0xe6, 0xae, 0x50, 0xaf, 0xea, 0x23, 0xf9, 0xba, 0x27, 0xeb,
	0xfb, 0x26, 0x99, 0x65, 0xde, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x7a, 0xc0, 0xac, 0x35,
	0x01, 0x00, 0x00,
}
