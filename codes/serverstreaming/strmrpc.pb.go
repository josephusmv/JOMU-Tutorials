// Code generated by protoc-gen-go. DO NOT EDIT.
// source: strmrpc.proto

package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StreamData struct {
	ID                   int64                `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Values               []string             `protobuf:"bytes,2,rep,name=Values" json:"Values,omitempty"`
	TimeStamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StreamData) Reset()         { *m = StreamData{} }
func (m *StreamData) String() string { return proto.CompactTextString(m) }
func (*StreamData) ProtoMessage()    {}
func (*StreamData) Descriptor() ([]byte, []int) {
	return fileDescriptor_strmrpc_c3f330961a277681, []int{0}
}
func (m *StreamData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamData.Unmarshal(m, b)
}
func (m *StreamData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamData.Marshal(b, m, deterministic)
}
func (dst *StreamData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamData.Merge(dst, src)
}
func (m *StreamData) XXX_Size() int {
	return xxx_messageInfo_StreamData.Size(m)
}
func (m *StreamData) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamData.DiscardUnknown(m)
}

var xxx_messageInfo_StreamData proto.InternalMessageInfo

func (m *StreamData) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *StreamData) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *StreamData) GetTimeStamp() *timestamp.Timestamp {
	if m != nil {
		return m.TimeStamp
	}
	return nil
}

func init() {
	proto.RegisterType((*StreamData)(nil), "gorpctutor.genfile.StreamData")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Demostream service

type DemostreamClient interface {
	RecevoirStream(ctx context.Context, in *wrappers.Int64Value, opts ...grpc.CallOption) (Demostream_RecevoirStreamClient, error)
}

type demostreamClient struct {
	cc *grpc.ClientConn
}

func NewDemostreamClient(cc *grpc.ClientConn) DemostreamClient {
	return &demostreamClient{cc}
}

func (c *demostreamClient) RecevoirStream(ctx context.Context, in *wrappers.Int64Value, opts ...grpc.CallOption) (Demostream_RecevoirStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Demostream_serviceDesc.Streams[0], c.cc, "/gorpctutor.genfile.demostream/RecevoirStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &demostreamRecevoirStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Demostream_RecevoirStreamClient interface {
	Recv() (*StreamData, error)
	grpc.ClientStream
}

type demostreamRecevoirStreamClient struct {
	grpc.ClientStream
}

func (x *demostreamRecevoirStreamClient) Recv() (*StreamData, error) {
	m := new(StreamData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Demostream service

type DemostreamServer interface {
	RecevoirStream(*wrappers.Int64Value, Demostream_RecevoirStreamServer) error
}

func RegisterDemostreamServer(s *grpc.Server, srv DemostreamServer) {
	s.RegisterService(&_Demostream_serviceDesc, srv)
}

func _Demostream_RecevoirStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(wrappers.Int64Value)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DemostreamServer).RecevoirStream(m, &demostreamRecevoirStreamServer{stream})
}

type Demostream_RecevoirStreamServer interface {
	Send(*StreamData) error
	grpc.ServerStream
}

type demostreamRecevoirStreamServer struct {
	grpc.ServerStream
}

func (x *demostreamRecevoirStreamServer) Send(m *StreamData) error {
	return x.ServerStream.SendMsg(m)
}

var _Demostream_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gorpctutor.genfile.demostream",
	HandlerType: (*DemostreamServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RecevoirStream",
			Handler:       _Demostream_RecevoirStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "strmrpc.proto",
}

func init() { proto.RegisterFile("strmrpc.proto", fileDescriptor_strmrpc_c3f330961a277681) }

var fileDescriptor_strmrpc_c3f330961a277681 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xb1, 0x4b, 0xc3, 0x40,
	0x14, 0x87, 0x4d, 0x22, 0x81, 0x9e, 0xd8, 0xe1, 0x06, 0x09, 0x11, 0x24, 0x74, 0x8a, 0x0e, 0x17,
	0xa9, 0x22, 0xce, 0x92, 0x25, 0xa3, 0x69, 0x71, 0x70, 0x91, 0x4b, 0x7c, 0x8d, 0x07, 0xb9, 0xbc,
	0xe3, 0xdd, 0x8b, 0xfe, 0xfb, 0x62, 0x62, 0xe9, 0x50, 0xe8, 0x78, 0xf0, 0xdd, 0xf7, 0xfd, 0x78,
	0xe2, 0xd2, 0x33, 0x59, 0x72, 0xad, 0x72, 0x84, 0x8c, 0x52, 0x76, 0x48, 0xae, 0xe5, 0x91, 0x91,
	0x54, 0x07, 0xc3, 0xce, 0xf4, 0x90, 0xde, 0x76, 0x86, 0xbf, 0xc6, 0x46, 0xb5, 0x68, 0x8b, 0x0e,
	0xb1, 0xeb, 0xa1, 0x98, 0xe0, 0x66, 0xdc, 0x15, 0x3f, 0xa4, 0x9d, 0x03, 0xf2, 0xf3, 0xf7, 0xf4,
	0xee, 0x04, 0xca, 0xc6, 0x82, 0x67, 0x6d, 0xdd, 0xcc, 0xae, 0x06, 0x21, 0x36, 0x4c, 0xa0, 0x6d,
	0xa9, 0x59, 0xcb, 0xa5, 0x08, 0xab, 0x32, 0x09, 0xb2, 0x20, 0x8f, 0xea, 0xb0, 0x2a, 0xe5, 0x95,
	0x88, 0xdf, 0x74, 0x3f, 0x82, 0x4f, 0xc2, 0x2c, 0xca, 0x17, 0xf5, 0xff, 0x4b, 0x3e, 0x8b, 0xc5,
	0xd6, 0x58, 0xd8, 0xfc, 0x89, 0x92, 0x28, 0x0b, 0xf2, 0x8b, 0x75, 0xaa, 0xe6, 0x94, 0xda, 0xa7,
	0xd4, 0x76, 0x9f, 0xaa, 0x0f, 0xf0, 0xfa, 0x43, 0x88, 0x4f, 0xb0, 0xe8, 0xa7, 0xa6, 0x7c, 0x15,
	0xcb, 0x1a, 0x5a, 0xf8, 0x46, 0x43, 0xf3, 0x0a, 0x79, 0x7d, 0xa4, 0xa9, 0x06, 0x7e, 0x7a, 0x9c,
	0xba, 0xe9, 0x8d, 0x3a, 0x3e, 0x8c, 0x3a, 0xcc, 0x5f, 0x9d, 0xdd, 0x07, 0x2f, 0xf1, 0xfb, 0xb9,
	0xd5, 0x66, 0x68, 0xe2, 0x49, 0xf0, 0xf0, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x35, 0x91, 0xc0, 0x0b,
	0x5b, 0x01, 0x00, 0x00,
}
