// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hellorpc.proto

package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TransResponse_OrderStatue int32

const (
	TransResponse_ACCEPT     TransResponse_OrderStatue = 0
	TransResponse_PENDING    TransResponse_OrderStatue = 1
	TransResponse_DELIEVERED TransResponse_OrderStatue = 2
	TransResponse_FINISHED   TransResponse_OrderStatue = 3
)

var TransResponse_OrderStatue_name = map[int32]string{
	0: "ACCEPT",
	1: "PENDING",
	2: "DELIEVERED",
	3: "FINISHED",
}
var TransResponse_OrderStatue_value = map[string]int32{
	"ACCEPT":     0,
	"PENDING":    1,
	"DELIEVERED": 2,
	"FINISHED":   3,
}

func (x TransResponse_OrderStatue) String() string {
	return proto.EnumName(TransResponse_OrderStatue_name, int32(x))
}
func (TransResponse_OrderStatue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_hellorpc_6c29a7e5cdac2bf7, []int{1, 0}
}

type TransRequest struct {
	Buyername            string           `protobuf:"bytes,1,opt,name=buyername" json:"buyername,omitempty"`
	Counts               []int32          `protobuf:"varint,2,rep,packed,name=counts" json:"counts,omitempty"`
	Itemlist             map[string]int32 `protobuf:"bytes,3,rep,name=itemlist" json:"itemlist,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TransRequest) Reset()         { *m = TransRequest{} }
func (m *TransRequest) String() string { return proto.CompactTextString(m) }
func (*TransRequest) ProtoMessage()    {}
func (*TransRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_hellorpc_6c29a7e5cdac2bf7, []int{0}
}
func (m *TransRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransRequest.Unmarshal(m, b)
}
func (m *TransRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransRequest.Marshal(b, m, deterministic)
}
func (dst *TransRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransRequest.Merge(dst, src)
}
func (m *TransRequest) XXX_Size() int {
	return xxx_messageInfo_TransRequest.Size(m)
}
func (m *TransRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransRequest proto.InternalMessageInfo

func (m *TransRequest) GetBuyername() string {
	if m != nil {
		return m.Buyername
	}
	return ""
}

func (m *TransRequest) GetCounts() []int32 {
	if m != nil {
		return m.Counts
	}
	return nil
}

func (m *TransRequest) GetItemlist() map[string]int32 {
	if m != nil {
		return m.Itemlist
	}
	return nil
}

type TransResponse struct {
	Accept               bool                                 `protobuf:"varint,1,opt,name=accept" json:"accept,omitempty"`
	Total                int32                                `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	Statues              map[string]TransResponse_OrderStatue `protobuf:"bytes,3,rep,name=Statues" json:"Statues,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=gopbtutor.hellow.TransResponse_OrderStatue"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *TransResponse) Reset()         { *m = TransResponse{} }
func (m *TransResponse) String() string { return proto.CompactTextString(m) }
func (*TransResponse) ProtoMessage()    {}
func (*TransResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_hellorpc_6c29a7e5cdac2bf7, []int{1}
}
func (m *TransResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransResponse.Unmarshal(m, b)
}
func (m *TransResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransResponse.Marshal(b, m, deterministic)
}
func (dst *TransResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransResponse.Merge(dst, src)
}
func (m *TransResponse) XXX_Size() int {
	return xxx_messageInfo_TransResponse.Size(m)
}
func (m *TransResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransResponse proto.InternalMessageInfo

func (m *TransResponse) GetAccept() bool {
	if m != nil {
		return m.Accept
	}
	return false
}

func (m *TransResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *TransResponse) GetStatues() map[string]TransResponse_OrderStatue {
	if m != nil {
		return m.Statues
	}
	return nil
}

func init() {
	proto.RegisterType((*TransRequest)(nil), "gopbtutor.hellow.TransRequest")
	proto.RegisterMapType((map[string]int32)(nil), "gopbtutor.hellow.TransRequest.ItemlistEntry")
	proto.RegisterType((*TransResponse)(nil), "gopbtutor.hellow.TransResponse")
	proto.RegisterMapType((map[string]TransResponse_OrderStatue)(nil), "gopbtutor.hellow.TransResponse.StatuesEntry")
	proto.RegisterEnum("gopbtutor.hellow.TransResponse_OrderStatue", TransResponse_OrderStatue_name, TransResponse_OrderStatue_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PurchaseOrderService service

type PurchaseOrderServiceClient interface {
	Purchase(ctx context.Context, in *TransRequest, opts ...grpc.CallOption) (*TransResponse, error)
}

type purchaseOrderServiceClient struct {
	cc *grpc.ClientConn
}

func NewPurchaseOrderServiceClient(cc *grpc.ClientConn) PurchaseOrderServiceClient {
	return &purchaseOrderServiceClient{cc}
}

func (c *purchaseOrderServiceClient) Purchase(ctx context.Context, in *TransRequest, opts ...grpc.CallOption) (*TransResponse, error) {
	out := new(TransResponse)
	err := grpc.Invoke(ctx, "/gopbtutor.hellow.PurchaseOrderService/Purchase", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PurchaseOrderService service

type PurchaseOrderServiceServer interface {
	Purchase(context.Context, *TransRequest) (*TransResponse, error)
}

func RegisterPurchaseOrderServiceServer(s *grpc.Server, srv PurchaseOrderServiceServer) {
	s.RegisterService(&_PurchaseOrderService_serviceDesc, srv)
}

func _PurchaseOrderService_Purchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurchaseOrderServiceServer).Purchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gopbtutor.hellow.PurchaseOrderService/Purchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurchaseOrderServiceServer).Purchase(ctx, req.(*TransRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PurchaseOrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gopbtutor.hellow.PurchaseOrderService",
	HandlerType: (*PurchaseOrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Purchase",
			Handler:    _PurchaseOrderService_Purchase_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hellorpc.proto",
}

func init() { proto.RegisterFile("hellorpc.proto", fileDescriptor_hellorpc_6c29a7e5cdac2bf7) }

var fileDescriptor_hellorpc_6c29a7e5cdac2bf7 = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x5d, 0x6b, 0xe2, 0x40,
	0x14, 0x35, 0xc9, 0x1a, 0xe3, 0xf5, 0x83, 0x30, 0xc8, 0x12, 0x64, 0xd9, 0x0d, 0x3e, 0x05, 0x76,
	0xc9, 0x83, 0xfb, 0xb2, 0x6c, 0x9f, 0xac, 0x19, 0x6b, 0xa0, 0xb5, 0x12, 0xa5, 0x0f, 0x7d, 0x1b,
	0xd3, 0x41, 0x43, 0x63, 0x26, 0x9d, 0x99, 0x58, 0xfc, 0x5f, 0xfd, 0x17, 0xfd, 0x53, 0xc5, 0x24,
	0xb6, 0x69, 0x29, 0xf5, 0x6d, 0xce, 0x3d, 0xf7, 0x9e, 0x73, 0x0f, 0x73, 0xa1, 0xbb, 0xa1, 0x71,
	0xcc, 0x78, 0x1a, 0xba, 0x29, 0x67, 0x92, 0x21, 0x73, 0xcd, 0xd2, 0x95, 0xcc, 0x24, 0xe3, 0x6e,
	0xce, 0x3c, 0x0e, 0x9e, 0x15, 0x68, 0x2f, 0x39, 0x49, 0x44, 0x40, 0x1f, 0x32, 0x2a, 0x24, 0xfa,
	0x01, 0xcd, 0x55, 0xb6, 0xa7, 0x3c, 0x21, 0x5b, 0x6a, 0x29, 0xb6, 0xe2, 0x34, 0x83, 0xb7, 0x02,
	0xfa, 0x0e, 0x7a, 0xc8, 0xb2, 0x44, 0x0a, 0x4b, 0xb5, 0x35, 0xa7, 0x1e, 0x94, 0x08, 0x4d, 0xc1,
	0x88, 0x24, 0xdd, 0xc6, 0x91, 0x90, 0x96, 0x66, 0x6b, 0x4e, 0x6b, 0xf8, 0xc7, 0xfd, 0xe8, 0xe5,
	0x56, 0x7d, 0x5c, 0xbf, 0x6c, 0xc7, 0x89, 0xe4, 0xfb, 0xe0, 0x75, 0xba, 0x7f, 0x06, 0x9d, 0x77,
	0x14, 0x32, 0x41, 0xbb, 0xa7, 0xfb, 0x72, 0x95, 0xc3, 0x13, 0xf5, 0xa0, 0xbe, 0x23, 0x71, 0x46,
	0x2d, 0xd5, 0x56, 0x9c, 0x7a, 0x50, 0x80, 0xff, 0xea, 0x3f, 0x65, 0xf0, 0xa4, 0x42, 0xa7, 0x74,
	0x11, 0x29, 0x4b, 0x44, 0xbe, 0x30, 0x09, 0x43, 0x9a, 0xca, 0x5c, 0xc0, 0x08, 0x4a, 0x74, 0xd0,
	0x90, 0x4c, 0x92, 0xf8, 0xa8, 0x91, 0x03, 0x34, 0x81, 0xc6, 0x42, 0x12, 0x99, 0x51, 0x71, 0x32,
	0x45, 0xa1, 0xef, 0x96, 0xed, 0x45, 0x8a, 0xe3, 0x70, 0x7f, 0x0d, 0xed, 0x2a, 0xf1, 0x49, 0x86,
	0x51, 0x35, 0x43, 0x77, 0xf8, 0xfb, 0x94, 0xcf, 0x35, 0xbf, 0xa3, 0xbc, 0xd0, 0xac, 0x06, 0xf6,
	0xa0, 0x55, 0x61, 0x10, 0x80, 0x3e, 0x1a, 0x8f, 0xf1, 0x7c, 0x69, 0xd6, 0x50, 0x0b, 0x1a, 0x73,
	0x3c, 0xf3, 0xfc, 0xd9, 0x85, 0xa9, 0xa0, 0x2e, 0x80, 0x87, 0x2f, 0x7d, 0x7c, 0x83, 0x03, 0xec,
	0x99, 0x2a, 0x6a, 0x83, 0x31, 0xf1, 0x67, 0xfe, 0x62, 0x8a, 0x3d, 0x53, 0x1b, 0x52, 0xe8, 0xcd,
	0x33, 0x1e, 0x6e, 0x88, 0xa0, 0x85, 0x1a, 0xe5, 0xbb, 0x28, 0xa4, 0xe8, 0x0a, 0x8c, 0x63, 0x1d,
	0xfd, 0xfc, 0xfa, 0x3f, 0xfb, 0xbf, 0x4e, 0x24, 0x18, 0xd4, 0xce, 0xf5, 0xdb, 0x6f, 0x5b, 0x12,
	0x25, 0x2b, 0x3d, 0x3f, 0xc6, 0xbf, 0x2f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x06, 0x21, 0xf9, 0x1d,
	0x9e, 0x02, 0x00, 0x00,
}
